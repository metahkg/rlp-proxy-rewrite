stages:
  - lint
  - test
  - build
  - deploy
  - review
  - dast
  - staging
  - canary
  - production
  - incremental rollout 10%
  - incremental rollout 25%
  - incremental rollout 50%
  - incremental rollout 100%
  - performance
  - cleanup

docker-build:
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - apk add nodejs-current
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE:latest" -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" -t "$CI_REGISTRY_IMAGE:$(node -e 'console.log(require("./package.json").version)')" .
    - docker push "$CI_REGISTRY_IMAGE:latest"
    - docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    - docker push "$CI_REGISTRY_IMAGE:$(node -e 'console.log(require("./package.json").version)')"
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      exists:
        - Dockerfile

include:
  - template: Auto-DevOps.gitlab-ci.yml
